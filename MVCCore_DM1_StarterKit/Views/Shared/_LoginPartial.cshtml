@using Microsoft.AspNetCore.Identity
@using MVCCoreStarterKit.Areas.Identity.Model
@inject SignInManager<IzendaUser> SignInManager
@inject UserManager<IzendaUser> UserManager

<ul class="nav navbar-nav navbar-right">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark">Hello @User.Identity.Name!</a>
        </li>

        @if (User.Identity.Name == "IzendaAdmin@system.com")
        {
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle text-dark" data-toggle="dropdown" href="#">
                    Create User / Tenant
                    <span class="caret"></span>
                </a>
                <ul class="dropdown-menu">
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/CreateUser">Create User</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/CreateTenant">Create Tenant</a>
                    </li>
                </ul>
            </li>
        }

        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            </form>
            <a href="javascript:document.getElementById('logoutForm').submit()">Logout</a>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>